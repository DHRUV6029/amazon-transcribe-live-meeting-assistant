# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: Amazon Transcribe Live Meeting Assist - LMA (v0.1.0)

Parameters:

  MeetingAssistExistingQApplicationId:
    Default: ''
    Type: String
    AllowedPattern: '^(|[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12})$'
    Description: >
      Provide the application *id* (not name) of an existing Q Business index to be used for Meeting Assist bot."

  AssistantWakePhraseRegEx:
    Type: String
    Default: [Hey,A,OK][ .,!]+Q[.,! ]+
    Description: >
      A regular expression for the wake phrase that invokes the Meeting Assistant. Default is 'Hey Q' or 'OK Q'

  S3BucketName:
    Type: String
    Description: >
      (Optional) Existing bucket where call recording files will be stored.
      Leave blank to automatically create new bucket.
    # yamllint disable rule:line-length
    AllowedPattern: '( *|(?=^.{3,63}$)(?!^(\d+\.)+\d+$)(^(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])$))'
    # yamllint enable rule:line-length

  AudioFilePrefix:
    Type: String
    Default: lca-audio-recordings/
    Description: The Amazon S3 prefix where the audio files will be saved (must end in "/")

  CallAnalyticsPrefix:
    Type: String
    Default: lca-call-analytics/
    Description: The Amazon S3 prefix where the post-call analytics files will be saved, when using analytics api mode (must end in "/")

  IsPartialTranscriptEnabled:
    Type: String
    Default: 'true'
    Description: >-
      Enable partial transcripts to receive low latency evolving transcriptions for each conversation turn. Set to false to process only the
      final version of each conversation turn.
    AllowedValues:
      - 'true'
      - 'false'

  IsContentRedactionEnabled:
    Type: String
    Default: 'false'
    Description: >-
      Enable content redaction from Amazon Transcribe transcription output. This is only used when
      the 'en-US' language is selected in the TranscribeLanguageCode parameter.
    AllowedValues:
      - 'true'
      - 'false'

  CategoryAlertRegEx:
    Type: String
    Default: .*
    Description: >
      If using the 'analytics' Transcribe API Mode, this regular expression will be used to show
      an alert in red in the web user interface if it matches a call category. This defaults to 
      matching all categories.

  TranscribeContentRedactionType:
    Type: String
    Default: PII
    Description: >-
      Type of content redaction from Amazon Transcribe transcription output
    AllowedValues:
      - PII

  TranscribeLanguageCode:
    Type: String
    Description: >-
      Language code to be used for Amazon Transcribe
    Default: en-US
    AllowedValues:
      - en-US
      - es-US
      - en-GB
      - fr-CA
      - fr-FR
      - en-AU
      - it-IT
      - de-DE
      - pt-BR
      - ja-JP
      - ko-KR
      - zh-CN

  TranscribePiiEntityTypes:
    Type: String
    Default: BANK_ACCOUNT_NUMBER,BANK_ROUTING,CREDIT_DEBIT_NUMBER,CREDIT_DEBIT_CVV,CREDIT_DEBIT_EXPIRY,PIN,EMAIL,ADDRESS,NAME,PHONE,SSN
    Description: >-
      Select the PII entity types you want to identify or redact. Remove the values that you don't want to redact from the default. DO NOT ADD CUSTOM VALUES HERE.

  CustomVocabularyName:
    Type: String
    Default: ''
    Description: >-
      The name of the vocabulary to use when processing the transcription job. Leave blank if no custom vocabulary to be used. If yes, the custom
      vocabulary must pre-exist in your account.

  CustomLanguageModelName:
    Type: String
    Default: ''
    Description: >-
      The name of the custom language model to use when processing the transcription job. Leave blank if no
      custom language model is to be used. If specified, the custom language model must pre-exist in your account, 
      match the Language Code selected above, and use the 'Narrow Band' base model.

  IsSentimentAnalysisEnabled:
    Type: String
    Default: 'true'
    Description: >-
      Enable sentiment analysis
    AllowedValues:
      - 'true'
      - 'false'

  SentimentNegativeScoreThreshold:
    Type: Number
    Default: 0.9
    MinValue: 0
    MaxValue: 1
    Description: >-
      Minimum negative sentiment confidence required to declare a phrase as having negative sentiment, in the range 0-1. 
      Not applicable when using Contact Lens or Transcribe Call Analytics (as sentiment is pre-calculated).

  SentimentPositiveScoreThreshold:
    Type: Number
    Default: 0.4
    MinValue: 0
    MaxValue: 1
    Description: >-
      Minimum positive sentiment confidence required to declare a phrase as having positive sentiment, in the range 0-1.
      Not applicable when using Contact Lens or Transcribe Call Analytics (as sentiment is pre-calculated).

  TranscriptLambdaHookFunctionArn:
    Default: ''
    Type: String
    AllowedPattern: '^(|arn:aws:lambda:.*)$'
    Description: >
      (Optional) If present, the specified Lambda function is invoked by the LCA Call Event Processor Lambda function for each completed 
      (non-partial) transcript segment. The function can capture and/or modify the text of the transcript, for example to implement custom
      redaction logic, profanity filtering, or custom rules to highlight patterns in the transcript.

  TranscriptLambdaHookFunctionNonPartialOnly:
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Description: >
      Specifies if Transcript Lambda Hook Function (if specified) is invoked for Non-Partial transcript segments only (true), or for
      both Partial and Non-Partial transcript segments (false).

  EndOfCallTranscriptSummary:
    Default: 'BEDROCK'
    Type: String
    AllowedValues:
      - 'BEDROCK'

    Description: >
      Set to enable call summarization by a Large Language Model. The SAGEMAKER option uses a SageMaker endpoint with
      the pretrained bart-large-cnn-samsum model with a ml.m5.xlarge instance type.  The LAMBDA option requires you 
      to provide a function ARN below. The ANTHROPIC option is a third party service, and you must enter your Anthropic API key below.
      BEDROCK option requires you to choose one of the supported model IDs from the 
      provided list (BedrockModelId).

  BedrockModelId:
    Default: 'anthropic.claude-instant-v1'
    Type: String
    AllowedValues: 
      - 'amazon.titan-text-express-v1'
      - 'ai21.j2-grande-instruct'
      - 'ai21.j2-jumbo-instruct'
      - 'anthropic.claude-instant-v1'
      - 'anthropic.claude-v1'
      - 'anthropic.claude-v2'

    Description: >
      If EndOfCallTranscriptSummary is BEDROCK, then choose a model ID from the list of supported models. 
      Defaults to 'anthropic.claude-instant-v1'

  EndOfCallLambdaHookFunctionArn:
    Default: ''
    Type: String
    AllowedPattern: '^(|arn:aws:lambda:.*)$'
    Description: >
      (Optional) If 'End Of Call Transcript Summary' is LAMBDA, provide ARN for a Lambda function. The specified Lambda function is invoked by the LCA Call Event Processor Lambda function 
      for end of call event. The function is passed en event with CallId as input.
      This function can implement custom logic that is relevant to end of call processing, for example, creating a call summary.

  StartOfCallLambdaHookFunctionArn:
    Default: ''
    Type: String
    AllowedPattern: '^(|arn:aws:lambda:.*)$'
    Description: >
      (Optional) The specified Lambda function is invoked by the LCA Call Event Processor Lambda function for beginning or start of 
      call event. This function can implement custom logic that is relevant to beginning of call processing, for example, retrieving
      call summary details logged into a case in a CRM.

  PostCallSummaryLambdaHookFunctionArn:
    Default: ''
    Type: String
    AllowedPattern: '^(|arn:aws:lambda:.*)$'
    Description: >
      (Optional) The specified Lambda function is invoked by the LCA Call Event Processor Lambda function after the call summary is processed.
      This function can implement custom logic that is relevant to post processing, for example, updating the call summary to a CRM system.

  AdminEmail:
    Type: String
    Description: >-
      Email address of admin user (e.g. jdoe@example.com) used for the API and web UI.
      An initial temporary password will be automatically sent to this user via email.
    AllowedPattern: '^[\w.+-]+@([\w-]+\.)+[\w-]{2,6}$'

  AllowedSignUpEmailDomain:
    Type: String
    Default: ''
    Description: >-
      Email address domain (example.com) or comma separated list of email domains 
      (example1.com, example2.com) allowed to signin and signup using the web UI.
      If left empty, signup via the web UI is disabled and users will have to be created using
      Cognito.
    AllowedPattern: '^(|([\w-]+\.)+[\w-]{2,6}(, *([\w-]+\.)+[\w-]{2,6})*)$'

  DemoAsteriskAgentAudioURL:
    Type: String
    Default: https://raw.githubusercontent.com/aws-samples/amazon-transcribe-live-call-analytics/main/lca-chimevc-stack/demo-audio/agent.wav
    Description: URL for audio (agent.wav) file download for demo Asterisk server.

  CloudFrontPriceClass:
    Type: String
    Default: PriceClass_100
    Description: >-
      Specify the CloudFront price class. See https://aws.amazon.com/cloudfront/pricing/ for a
      description of each price class.
    AllowedValues:
      - PriceClass_100
      - PriceClass_200
      - PriceClass_All
    ConstraintDescription: >-
      Allowed Price Classes PriceClass_100 PriceClass_200 and PriceClass_All

  CloudFrontAllowedGeos:
    Type: String
    Default: ''
    Description: >-
      Specify a comma separated list of two letter country codes (uppercase ISO 3166-1) that are
      allowed to access the web user interface via CloudFront. For example: US,CA. Leave empty if
      you do not want geo restrictions to be applied.
    AllowedPattern: '^(|[A-Z]{2}(,[A-Z]{2})*)$'
    ConstraintDescription: >-
      Comma separated list of uppercase two letter country codes or empty

  DynamoDbExpirationInDays:
    Type: Number
    Default: 90
    Description: >-
      Number of days to retain call records. Records will be automatically deleted from LCA after this time.

  RecordingsBucketRetentionDays:
    Type: Number
    Description: 'Number of days after which bucket objects will be deleted from the Recordings bucket.'
    Default: 30

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Web UI Authentication
        Parameters:
          - AdminEmail
          - AllowedSignUpEmailDomain
      - Label:
          default: Meeting Assist Options
        Parameters:
          - MeetingAssistExistingQApplicationId
          - AssistantWakePhraseRegEx
      - Label:
          default: Amazon S3 Configuration
        Parameters:
          - S3BucketName
          - AudioFilePrefix
          - CallAnalyticsPrefix
      - Label:
          default: Amazon Transcribe Configuration
        Parameters:
          - IsPartialTranscriptEnabled
          - IsContentRedactionEnabled
          - TranscribeLanguageCode
          - TranscribeContentRedactionType
          - TranscribePiiEntityTypes
          - CustomVocabularyName
          - CustomLanguageModelName
      - Label:
          default: Transcript Event Processing Configuration
        Parameters:
          - IsSentimentAnalysisEnabled
          - SentimentNegativeScoreThreshold
          - SentimentPositiveScoreThreshold
          - TranscriptLambdaHookFunctionArn
          - TranscriptLambdaHookFunctionNonPartialOnly
          - EndOfCallTranscriptSummary
          - BedrockModelId
          - EndOfCallLambdaHookFunctionArn
          - StartOfCallLambdaHookFunctionArn
          - PostCallSummaryLambdaHookFunctionArn
      - Label:
          default: Download locations
        Parameters:
          - DemoAsteriskAgentAudioURL
      - Label:
          default: Amazon CloudFront Configuration
        Parameters:
          - CloudFrontPriceClass
          - CloudFrontAllowedGeos
      - Label:
          default: Retention
        Parameters:
          - DynamoDbExpirationInDays
          - RecordingsBucketRetentionDays
      - Label:
          default: User Experience
        Parameters:
          - CategoryAlertRegEx

    ParameterLabels:
      CallAudioProcessor:
        default: Call Audio Processor
      ChimeVoiceToneAnalysis:
        default: Chime Voice Tone Analysis
      S3BucketName:
        default: Call Audio Recordings Bucket Name
      AudioFilePrefix:
        default: Audio File Prefix
      CallAnalyticsPrefix:
        default: Call Analytics Output File Prefix
      CustomVoiceConnectorId:
        default: Amazon Chime SDK Voice Connector ID (existing)
      AdminEmail:
        default: Admin Email Address
      AllowedSignUpEmailDomain:
        default: Authorized Account Email Domain(s)
      MeetingAssistExistingQApplicationId:
        default: Meeting Assist Amazon Q Business Application Id (existing)
      MeetingAssistWakePhraseRegEx:
        default: Meeting Assist Wake Phrase Regular Expression
      IsPartialTranscriptEnabled:
        default: Enable Partial Transcripts
      IsContentRedactionEnabled:
        default: Enable Content Redaction for Transcripts
      TranscribeLanguageCode:
        default: Language for Transcription
      TranscribeContentRedactionType:
        default: Content Redaction Type for Transcription
      TranscribePiiEntityTypes:
        default: Transcription PII Redaction Entity Types
      CustomVocabularyName:
        default: Transcription Custom Vocabulary Name
      CustomLanguageModelName:
        default: Transcription Custom Language Model Name
      DemoAsteriskAgentAudioURL:
        default: Demo Asterisk Server Agent WAV File Download URL
      IsSentimentAnalysisEnabled:
        default: Enable Sentiment Analysis
      SentimentNegativeScoreThreshold:
        default: Sentiment Negative Score Threshold
      SentimentPositiveScoreThreshold:
        default: Sentiment Positive Score Threshold
      TranscriptLambdaHookFunctionArn:
        default: Lambda Hook Function ARN for Custom Transcript Segment Processing (existing)
      TranscriptLambdaHookFunctionNonPartialOnly:
        default: Lambda Hook Function Mode Non-Partial only
      EndOfCallTranscriptSummary:
        default: End of Call Transcript Summary
      EndOfCallLambdaHookFunctionArn:
        default: Lambda Hook Function ARN for Custom End of Call Processing (existing)
      StartOfCallLambdaHookFunctionArn:
        default: Lambda Hook Function ARN for Custom Start of Call Processing (existing)
      PostCallSummaryLambdaHookFunctionArn:
        default: Lambda Hook Function ARN for Custom Post Processing, after the Call Transcript Summary is processed (existing)
      CloudFrontPriceClass:
        default: CloudFront Price Class
      CloudFrontAllowedGeos:
        default: CloudFront Allowed Geographies
      DynamoDbExpirationInDays:
        default: Record Expiration In Days
      RecordingsBucketRetentionDays:
        default: Recording Expiration In Days
      CategoryAlertRegEx:
        default: Category Alert Regular Expression

Mappings:
  TranscribeToComprehendLanguage:
    en-US:
      Value: en
    es-US:
      Value: es
    en-GB:
      Value: en
    fr-CA:
      Value: fr
    fr-FR:
      Value: fr
    en-AU:
      Value: en
    it-IT:
      Value: it
    de-DE:
      Value: de
    pt-BR:
      Value: pt
    ja-JP:
      Value: ja
    ko-KR:
      Value: ko
    zh-CN:
      Value: zh

  TranscribeToLexLocaleId:
    en-US:
      Value: en_US
    es-US:
      Value: es_US
    en-GB:
      Value: en_GB
    fr-CA:
      Value: fr_CA
    fr-FR:
      Value: fr_FR
    en-AU:
      Value: en_AU
    it-IT:
      Value: it_IT
    de-DE:
      Value: de_DE
    pt-BR:
      Value: pt_BR
    ja-JP:
      Value: ja_JP
    ko-KR:
      Value: ko_KR
    zh-CN:
      Value: zh_CH

Resources:
  # Custom resource to enforce max length of StackName - prevent downstream failures
  StacknameCheckFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: python3.11
      InlineCode: |
        import cfnresponse
        import time
        import json
        def handler(event, context):
            print(json.dumps(event))
            input = event['ResourceProperties'].get('InputString', '')
            max_length = int(event['ResourceProperties'].get('MaxLength', 0))
            status = cfnresponse.SUCCESS
            reason = f"Stack Name Length under {max_length} - OK"
            if event['RequestType'] == "Create":
              if len(input) > max_length:
                status = cfnresponse.FAILED
                reason = f"Stack Name length too long - max length {max_length} - FAILED"
            else:
              print(f"Request type is {event['RequestType']} - skipping")
            cfnresponse.send(event, context, status, {}, reason=reason)

  IsStacknameLengthOK:
    Type: Custom::StacknameCheck
    Properties:
      ServiceToken: !GetAtt StacknameCheckFunction.Arn
      InputString: !Ref 'AWS::StackName'
      MaxLength: 25
  
  ToJSONFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: python3.11
      InlineCode: |
        import cfnresponse
        import json
        def handler(event, context):
            print(json.dumps(event))
            status = cfnresponse.SUCCESS
            reason = "Sucessful"
            result = {}
            if event['RequestType'] in ["Create", "Update"]:
              output = {}
              for k, v in event['ResourceProperties'].items():
                if k != "ServiceToken":
                  output[k] = v
              outputJSON = json.dumps(output)
              result = {"Output": outputJSON}
            else:
              print(f"Request type is {event['RequestType']} - skipping")
            cfnresponse.send(event, context, status, result, reason=reason)

  QNABOTPLUGINQBUSINESS:
    Type: AWS::CloudFormation::Stack
    DependsOn: IsStacknameLengthOK
    Properties:
      # yamllint disable rule:line-length
      TemplateURL: https://s3.<REGION_TOKEN>.amazonaws.com/<ARTIFACT_BUCKET_TOKEN>/<ARTIFACT_PREFIX_TOKEN>/aws-qnabot-plugins/qna_bot_qbusiness_lambdahook.yaml
      # yamllint enable rule:line-length
      Parameters:
        AmazonQAppId: !Ref MeetingAssistExistingQApplicationId
        AmazonQUserId: !Ref AdminEmail
  
  QNABOTPLUGINBEDROCK:
    Type: AWS::CloudFormation::Stack
    DependsOn: IsStacknameLengthOK
    Properties:
      # yamllint disable rule:line-length
      TemplateURL: https://s3.<REGION_TOKEN>.amazonaws.com/<ARTIFACT_BUCKET_TOKEN>/<ARTIFACT_PREFIX_TOKEN>/aws-qnabot-plugins/bedrock-embeddings-and-llm.yaml
      # yamllint enable rule:line-length
      Parameters:
        EmbeddingsModelId: 'amazon.titan-embed-text-v1'
        LLMModelId: 'amazon.titan-text-lite-v1'

  QNABOT:
    Type: AWS::CloudFormation::Stack
    DependsOn: IsStacknameLengthOK
    Properties:
      # yamllint disable rule:line-length
      TemplateURL: https://s3.<REGION_TOKEN>.amazonaws.com/<ARTIFACT_BUCKET_TOKEN>/<ARTIFACT_PREFIX_TOKEN>/aws-qnabot/templates/master.json
      # yamllint enable rule:line-length
      Parameters:
        Email: !Ref AdminEmail
        Username: 'Admin'
        LexV2BotLocaleIds:
          !FindInMap [
            TranscribeToLexLocaleId,
            !Ref TranscribeLanguageCode,
            Value,
          ]
        BootstrapBucket: <ARTIFACT_BUCKET_TOKEN>
        BootstrapPrefix: <ARTIFACT_PREFIX_TOKEN>/aws-qnabot
        InstallLexResponseBots: 'false'
        EmbeddingsApi: 'LAMBDA'
        EmbeddingsLambdaArn: !GetAtt QNABOTPLUGINBEDROCK.Outputs.EmbeddingsLambdaArn
        EmbeddingsLambdaDimensions: !GetAtt QNABOTPLUGINBEDROCK.Outputs.EmbeddingsLambdaDimensions
        LLMApi: 'LAMBDA'
        LLMLambdaArn: !GetAtt QNABOTPLUGINBEDROCK.Outputs.LLMLambdaArn

  SSMSTACK:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.<REGION_TOKEN>.amazonaws.com/<ARTIFACT_BUCKET_TOKEN>/<ARTIFACT_PREFIX_TOKEN>/lca-ssm-stack/template.yaml
      Parameters:
        LCAStackName: !Ref AWS::StackName

  AISTACK:
    Type: AWS::CloudFormation::Stack
    DependsOn: IsStacknameLengthOK
    Properties:
      # yamllint disable rule:line-length
      TemplateURL: https://s3.<REGION_TOKEN>.amazonaws.com/<ARTIFACT_BUCKET_TOKEN>/<ARTIFACT_PREFIX_TOKEN>/lca-ai-stack/<VERSION_TOKEN>/template.yaml
      # yamllint enable rule:line-length
      Parameters:
        LCAStackName: !Ref AWS::StackName
        MeetingAssistWakePhraseRegEx: !Ref MeetingAssistWakePhraseRegEx
        RecordingsBucketRetentionDays: !Ref RecordingsBucketRetentionDays
        EnableVoiceToneAnalysis: 'false'
        CallAudioSource: 'Genesys Cloud Audiohook Web Socket'
        S3BucketName: !Ref S3BucketName
        AdminEmail: !Ref AdminEmail
        AllowedSignUpEmailDomain: !Ref AllowedSignUpEmailDomain
        CategoryAlertRegEx: !Ref CategoryAlertRegEx
        ComprehendLanguageCode:
          !FindInMap [
            TranscribeToComprehendLanguage,
            !Ref TranscribeLanguageCode,
            Value,
          ]
        IsSentimentAnalysisEnabled: !Ref IsSentimentAnalysisEnabled
        SentimentNegativeScoreThreshold: !Ref SentimentNegativeScoreThreshold
        SentimentPositiveScoreThreshold: !Ref SentimentPositiveScoreThreshold
        CloudFrontPriceClass: !Ref CloudFrontPriceClass
        CloudFrontAllowedGeos: !Ref CloudFrontAllowedGeos
        IsLexAgentAssistEnabled: true
        DynamoDbExpirationInDays: !Ref DynamoDbExpirationInDays
        TranscriptLambdaHookFunctionArn: !Ref TranscriptLambdaHookFunctionArn
        TranscriptLambdaHookFunctionNonPartialOnly: !Ref TranscriptLambdaHookFunctionNonPartialOnly
        EndOfCallTranscriptSummary: !Ref EndOfCallTranscriptSummary
        BedrockModelId: !Ref BedrockModelId
        EndOfCallLambdaHookFunctionArn: !Ref EndOfCallLambdaHookFunctionArn
        StartOfCallLambdaHookFunctionArn: !Ref StartOfCallLambdaHookFunctionArn
        PostCallSummaryLambdaHookFunctionArn: !Ref PostCallSummaryLambdaHookFunctionArn

  # Format nested JSON strings before nesting them in QnABotSettings in MEETINGASSISTSETUP
  SettingsJSON:
    Type: Custom::ToJSON
    Properties:
      ServiceToken: !GetAtt ToJSONFunction.Arn
      EMBEDDINGS_SCORE_THRESHOLD: !GetAtt QNABOTPLUGINBEDROCK.Outputs.QnABotSettingEmbeddingsScoreThreshold
      EMBEDDINGS_SCORE_ANSWER_THRESHOLD: !GetAtt QNABOTPLUGINBEDROCK.Outputs.QnABotSettingEmbeddingsScoreAnswerThreshold
      EMBEDDINGS_TEXT_PASSAGE_SCORE_THRESHOLD: !GetAtt QNABOTPLUGINBEDROCK.Outputs.QnABotSettingEmbeddingsTextPassageScoreThreshold
      LLM_GENERATE_QUERY_MODEL_PARAMS: !GetAtt QNABOTPLUGINBEDROCK.Outputs.QnABotSettingGenerateQueryModelParams
      LLM_QA_MODEL_PARAMS: !GetAtt QNABOTPLUGINBEDROCK.Outputs.QnABotSettingQAModelParams
      LLM_GENERATE_QUERY_PROMPT_TEMPLATE: "<br><br>Human: Let's think carefully step by step. Here is the transcript of an ongoing phone call between a caller (Human) and an agent (AI) in <transcript> tags:<br><transcript>{history}</transcript><br>And here is a follow up question or statement from the caller in <followUpMessage> tags:<br> <followUpMessage>{input}</followUpMessage><br>Rephrase the caller's follow up question or statement as a standalone question or statement that contains all the context and makes sense on its own without reading the transcript. If the caller is just engaging in small talk or saying thanks, respond with \"small talk\".<br><br>Assistant: Here is the rephrased follow up question or statement, or small talk: "
      LLM_QA_PROMPT_TEMPLATE: "<br><br>Human: Let's think carefully step by step. You are a call center assistant. Your job is to advise a call center agent how best to respond to a caller query, based on the reference passages provided inside <references></reference> XML tags. The caller's query is below, inside <query></query> XML tags.<br><references><br>{context}<br></references><br><br><query><br>{query}<br></query><br><br>If the references contain the information needed to answer the query, then write a confident response in under 50 words, quoting the relevant references.<br>If you can make an informed guess on how to answer the query based on the reference passages, then write a tentative response in under 50 words, stating your assumptions.<br>If the reference passages do not have any information that you can use to answer the query, then respond saying \"Sorry, I don't know\".<br>If the query contains \"small talk\" then respond saying \"Sorry, I cannot respond to small talk\".<br>Think carefully, step by step.<br><br>Assistant:"
      EMPTYMESSAGE: "No response from agent assist QnAbot"

  MEETINGASSISTSETUP:
    Type: AWS::CloudFormation::Stack
    DependsOn: AISTACK
    Properties:
      # yamllint disable rule:line-length
      TemplateURL: https://s3.<REGION_TOKEN>.amazonaws.com/<ARTIFACT_BUCKET_TOKEN>/<ARTIFACT_PREFIX_TOKEN>/lma-meetingassist-setup-stack/template.yaml
      # yamllint enable rule:line-length
      Parameters:
        LMAStackName: !Ref AWS::StackName
        AISTACK: !Ref AISTACK
        QNABOTSTACK: !Ref QNABOT
        LexMeetingAssistBotId: !GetAtt QNABOT.Outputs.LexV2BotId
        LexMeetingAssistAliasId: !GetAtt QNABOT.Outputs.LexV2BotAliasId
        LexMeetingAssistLocaleId:
          !FindInMap [
            TranscribeToLexLocaleId,
            !Ref TranscribeLanguageCode,
            Value,
          ]
        WebAppBucket: !GetAtt AISTACK.Outputs.WebAppBucket
        CloudFrontDistributionId: !GetAtt AISTACK.Outputs.CloudFrontDistributionId
        QnaMeetingAssistDemoJson: <ARTIFACT_BUCKET_TOKEN>/<ARTIFACT_PREFIX_TOKEN>/lma-meetingassist-setup-stack/qna-ma-demo.jsonl
        # Changes to Params below force AgentAssist Setup to update.
        ComprehendLanguageCode:
          !FindInMap [
            TranscribeToComprehendLanguage,
            !Ref TranscribeLanguageCode,
            Value,
          ]
        TranscribeLanguageCode: !Ref TranscribeLanguageCode
        IsSentimentAnalysisEnabled: !Ref IsSentimentAnalysisEnabled
        SentimentNegativeScoreThreshold: !Ref SentimentNegativeScoreThreshold
        SentimentPositiveScoreThreshold: !Ref SentimentPositiveScoreThreshold
        TranscriptLambdaHookFunctionArn: !Ref TranscriptLambdaHookFunctionArn
        TranscriptLambdaHookFunctionNonPartialOnly: !Ref TranscriptLambdaHookFunctionNonPartialOnly
        DynamoDbExpirationInDays: !Ref DynamoDbExpirationInDays
        EndOfCallTranscriptSummary: !Ref EndOfCallTranscriptSummary
        EndOfCallLambdaHookFunctionArn: !Ref EndOfCallLambdaHookFunctionArn
        LexMeetingAssistIdentityPoolId: !GetAtt AISTACK.Outputs.LexAgentAssistIdentityPoolId
        CloudFrontDomainName: !GetAtt AISTACK.Outputs.CloudFrontDomainName
        FetchTranscriptFunctionArn: !GetAtt AISTACK.Outputs.FetchTranscriptArn
        TranscriptSummaryFunctionArn: !GetAtt AISTACK.Outputs.TranscriptSummaryFunctionArn
        # QnaBotSettings - JSON param with new settings values based on options selected
        QnaBotSettings: !GetAtt SettingsJSON.Output
        Version: v0.8.8


  WEBSOCKETSTACK:
    Type: AWS::CloudFormation::Stack
    Properties:
      # yamllint disable rule:line-length
      TemplateURL: https://s3.<REGION_TOKEN>.amazonaws.com/<ARTIFACT_BUCKET_TOKEN>/<ARTIFACT_PREFIX_TOKEN>/lca-websocket-stack/<VERSION_TOKEN>/template.yaml
      # yamllint enable rule:line-length
      Parameters:
        S3BucketName: !GetAtt AISTACK.Outputs.S3BucketName
        AudioFilePrefix: !Ref AudioFilePrefix
        UserPoolId: !GetAtt AISTACK.Outputs.UserPoolId
        CallAnalyticsPrefix: !Ref CallAnalyticsPrefix
        CallDataStreamName: !GetAtt AISTACK.Outputs.CallDataStreamName
        CallDataStreamArn: !GetAtt AISTACK.Outputs.CallDataStreamArn
        CloudFrontPriceClass: !Ref CloudFrontPriceClass
        TranscribeApiMode: 'standard'
        IsContentRedactionEnabled: !Ref IsContentRedactionEnabled
        TranscribeContentRedactionType: !Ref TranscribeContentRedactionType
        TranscribeLanguageCode: !Ref TranscribeLanguageCode
        TranscribePiiEntityTypes: !Ref TranscribePiiEntityTypes
        CustomVocabularyName: !Ref CustomVocabularyName
        CustomLanguageModelName: !Ref CustomLanguageModelName
        PcaS3BucketName: ''
        PcaTranscriptsPrefix: ''
        PcaPlaybackAudioFilePrefix: ''
        PcaWebAppURL: ''
        PcaWebAppCallPathPrefix: ''
        LCASettingsParameterName: !GetAtt AISTACK.Outputs.LCASettingsParameterName

Outputs:
  ApplicationCloudfrontEndpoint:
    Description: LCA User Interface URL
    Value: !GetAtt AISTACK.Outputs.CloudfrontEndpoint

  CallDataStreamArn:
    Description: >-
      The ARN of Kinesis Data Stream for sending Call and Transcription events.
    Value: !GetAtt AISTACK.Outputs.CallDataStreamArn
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}-CallDataStreamArn'

  LCAWebsocketEndpoint:
    Description: Websocket endpoint for websocket integration
    Value: !GetAtt WEBSOCKETSTACK.Outputs.WebSocketEndpoint
      
  QnaBotContentDesigner:
    Description: Agent Assist Content Designer URL (QnABot on AWS)
    Value: !GetAtt QNABOT.Outputs.ContentDesignerURL

  RecordingsS3Bucket:
    Description: Bucket contains all the call recordings
    Value: !GetAtt AISTACK.Outputs.S3BucketName

  SNSCategoryTopicName:
    Description: The name of the SNS Topic for matched category and alert notifications
    Value: !GetAtt AISTACK.Outputs.SNSTopic

  FetchTranscriptLambdaArn:
    Description: The ARN of a Lambda function that will process and export a call transcript as a string.
    Value: !GetAtt AISTACK.Outputs.FetchTranscriptArn

  LLMPromptSummaryTemplateParameter:
    Description: The LLM summary prompt template in SSM Parameter Store - open to customise call summary prompts.
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/systems-manager/parameters/${SSMSTACK.Outputs.LLMPromptSummaryTemplateParameter}"
